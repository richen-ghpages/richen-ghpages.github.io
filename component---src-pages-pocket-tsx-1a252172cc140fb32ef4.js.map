{"version":3,"sources":["webpack://richen-portfolio/./src/hooks/usePocketFeed.tsx","webpack://richen-portfolio/./src/utils/types.ts","webpack://richen-portfolio/./src/components/PocketFeed.tsx","webpack://richen-portfolio/./src/utils/functions.ts","webpack://richen-portfolio/./src/pages/pocket.tsx"],"names":["keys","consumer_key","process","POCKET_CONSUMER_KEY","access_token","POCKET_ACCESS_TOKEN","articles","setArticles","useState","lastTime","setLastTime","refetchArticles","async","Date","now","response","axios","state","sort","detailType","sortedArticles","Object","values","data","list","a","b","time_added","since","error","console","log","useEffect","SListBorder","styled","SList","MDBListGroup","SListItem","MDBListGroupItem","SListIcon","SListRightContainer","SListPrimaryText","SPrimaryTextTitle","SListSecondaryText","MDBTypography","SLink","MDBNavbarLink","SDivider","usePocketFeed","undefined","length","horizontal","map","article","logo","domain_metadata","top_image_url","key","item_id","tag","onClick","evt","url","preventDefault","window","location","href","handleClick","given_url","onError","e","target","onerror","src","alt","resolved_title","given_title","UNIX_timestamp","year","getFullYear","month","getMonth","getDate","getHours","getMinutes","timeConverter","to","variant","excerpt","props","Layout","title"],"mappings":"iOAMA,MAEMA,EAAO,CACXC,aAAcC,GAAYC,oBAC1BC,aAAcF,GAAYG,qBAgD5B,MA3CsB,KACpB,MAAOC,EAAUC,IAAeC,cAC9B,KAEKC,EAAUC,IAAeF,cAAS,MAEnCG,EAAkBC,UACtB,GAAKH,GAoBE,GAAIA,EAAWI,KAAKC,MACzB,YApBA,IACE,MAAMC,QAAiBC,SAAY,qDAAgB,CACjDf,aAAcD,EAAKC,aACnBG,aAAcJ,EAAKI,aACnBa,MAAO,MACPC,KAAM,SACNC,WAAY,aAKRC,EAHyCC,OAAOC,OACpDP,EAASQ,KAAKC,MAE8CN,MAC5D,CAACO,EAAkBC,IAAqBA,EAAEC,WAAaF,EAAEE,aAE3DpB,EAAYa,GACZV,EAAYK,EAASQ,KAAKK,OAC1B,MAAOC,GACPC,QAAQC,IAAIF,KAelB,OAJAG,gBAAU,KACRrB,MACC,IAEI,CAACL,EAAUK,MCvDb,MCoBDsB,EAAcC,oBAAH,mEAAGA,CAAH,kIAUXC,GAAQD,QAAOE,MAAV,wEAAGF,CAAH,wJAYLG,GAAYH,QAAOI,MAAV,4EAAGJ,CAAH,oNAgBTK,EAAYL,oBAAH,iEAAGA,CAAH,4PAkBTM,EAAsBN,oBAAH,2EAAGA,CAAH,2HAUnBO,EAAmBP,oBAAH,wEAAGA,CAAH,+EAOhBQ,EAAoBR,uBAAH,yEAAGA,CAAH,uDAMjBS,GAAqBT,QAAOU,MAAV,qFAAGV,CAAH,2HAUlBW,GAAQX,QAAOY,MAAV,wEAAGZ,CAAH,6GAULa,EAAWb,oBAAH,gEAAGA,CAAH,gEA4Ed,MArEmB,KACjB,MAAO5B,EAAUK,GAAmBqC,IAUpC,YDtI6CC,ICsItB3C,EDtIW4C,OCwI9B,gBAACjB,EAAD,KACE,gBAACE,EAAD,CAAOgB,YAAU,GACd7C,GACCA,EAAS8C,KAAIC,IACX,IAAIC,EASJ,OAPKD,EAAQE,iBAAoBF,EAAQG,cAE7BH,EAAQE,gBAETF,EAAQE,kBACjBD,EAAOD,EAAQE,gBAAgBD,MAF/BA,EAAOD,EAAQG,cAFfF,EAAO,iCAOP,uBAAKG,IAAKJ,EAAQK,SAChB,gBAACrB,EAAD,CACEsB,IAAI,SACJC,QAASC,GA3BP,EAClBA,EACAC,KAEAD,EAAIE,iBACJC,OAAOC,SAASC,KAAOJ,GAsBSK,CAAYN,EAAKR,EAAQe,YAEzC,gBAAC7B,EAAD,CACE8B,QAASC,IACPA,EAAEC,OAAOC,QAAU,KACnBF,EAAEC,OAAOE,IAAM,kCAEjBC,IAAM,GAAErB,EAAQsB,iBAChBF,IAAKnB,IAEP,gBAACd,EAAD,KACE,gBAACC,EAAD,KACE,gBAACC,EAAD,KACGW,EAAQuB,aAEX,2BC1KMC,KAC5B,MAAMpD,EAAI,IAAIZ,KAAsB,IAAjBgE,GAebC,EAAOrD,EAAEsD,cACTC,EAfS,CACb,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGmBvD,EAAEwD,YAKvB,MADc,GAHDxD,EAAEyD,aAGSF,KAASF,KAFpBrD,EAAE0D,cACH1D,EAAE2D,gBDsJcC,CAAchC,EAAQ1B,cAE9B,gCACE,gBAACkB,EAAD,CAAOyC,GAAIjC,EAAQe,WAChBf,EAAQe,WAEX,gBAACzB,EAAD,CAAoB4C,QAAQ,SACzBlC,EAAQmC,YAMjB,gBAACzC,EAAD,YAQT,4D,UEjLT,MATgB0C,GAEZ,gBAACC,EAAA,EAAD,KACE,gBAAC,IAAD,CAAKC,MAAM,WACX,gBAAC,EAAD","file":"component---src-pages-pocket-tsx-1a252172cc140fb32ef4.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport * as types from '../utils/types';\n\n// TODO add refetchArticles functionality\n\nconst url = 'https://getpocket.com/v3/get';\nconst cors = 'http://127.0.0.1:8080/';\nconst keys = {\n  consumer_key: process.env.POCKET_CONSUMER_KEY,\n  access_token: process.env.POCKET_ACCESS_TOKEN,\n};\n\nconst refetchUrl = '';\n\nconst usePocketFeed = () => {\n  const [articles, setArticles] = useState<Array<never> | Array<types.Article>>(\n    []\n  );\n  const [lastTime, setLastTime] = useState(null);\n\n  const refetchArticles = async () => {\n    if (!lastTime) {\n      try {\n        const response = await axios.post(`${cors}${url}`, {\n          consumer_key: keys.consumer_key,\n          access_token: keys.access_token,\n          state: 'all',\n          sort: 'newest',\n          detailType: 'complete',\n        });\n        const articlesResponse: Array<types.Article> = Object.values(\n          response.data.list\n        );\n        const sortedArticles: Array<types.Article> = articlesResponse.sort(\n          (a: types.Article, b: types.Article) => b.time_added - a.time_added\n        );\n        setArticles(sortedArticles);\n        setLastTime(response.data.since);\n      } catch (error) {\n        console.log(error);\n      }\n    } else if (lastTime < Date.now()) {\n      return;\n      // make a difference a debounce rate\n      const { data } = await axios.get(refetchUrl);\n      console.log('refetch data', data);\n      setArticles(articles.concat(data));\n      setLastTime(data.time);\n    }\n  };\n  useEffect(() => {\n    refetchArticles();\n  }, []);\n\n  return [articles, refetchArticles()];\n};\n\nexport default usePocketFeed;\n","export const instanceOfArticles = (\n  articlesArg: Article[] | Promise<void>\n): articlesArg is Article[] => {\n  return (articlesArg as Article[]).length !== undefined;\n};\n\nexport interface Article {\n  item_id: number;\n  resolved_id: number;\n  given_url: string;\n  given_title: string;\n  favorite: number;\n  status: number;\n  time_added: number;\n  time_updated: number;\n  time_read: number;\n  time_favorited: number;\n  sort_id: number;\n  resolved_title: string;\n  resolved_url: number;\n  excerpt: string;\n  is_article: number;\n  is_index: number;\n  has_video: number;\n  has_image: number;\n  word_count: number;\n  lang: string;\n  top_image_url: string;\n  authors: {\n    number: {\n      item_id: number;\n      author_id: number;\n      name: string;\n      url: string;\n    };\n  };\n  domain_metadata: {\n    name: string;\n    logo: string;\n    grayscale_logo: string;\n  };\n  listen_duration_estimate: number;\n}\n","import React from 'react';\nimport {\n  MDBListGroup,\n  MDBListGroupItem,\n  MDBTypography,\n  MDBNavbarLink,\n} from 'mdb-react-ui-kit';\nimport styled from 'styled-components';\nimport usePocketFeed from '../hooks/usePocketFeed';\nimport { instanceOfArticles } from '../utils/types';\nimport { timeConverter } from '../utils/functions';\n\n// TODO Create a maxChar prop for primary and secondary\n\n// TODO Handle colors via props for later theming\n\n// TODO create minimalism component with MDB and Flicking vertical display\n\n// TODO create onclick for toggling between minimalism and not\n\nconst SListBorder = styled.div`\n  border-radius: 8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #424242;\n  padding: 8px 0;\n  margin: 10px;\n`;\n\nconst SList = styled(MDBListGroup)`\n  margin: 10px;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  width: 900px;\n  height: 600px;\n  border-radius: 8px;\n  background-color: #424242;\n  overflow-y: scroll;\n`;\n\nconst SListItem = styled(MDBListGroupItem)`\n  width: 100%;\n  min-height: 150px;\n  max-height: 220px;\n  display: flex;\n  background-color: #424242;\n  color: #424242;\n  margin-right: 10px;\n  border: none;\n  border-radius: 10px !important;\n  cursor: pointer;\n  &:hover {\n    background-color: #313131;\n  }\n`;\n\nconst SListIcon = styled.img`\n  margin-right: 15px;\n  max-width: 100px;\n  max-height: 100px;\n  min-width: 100px;\n  min-height: 100px;\n  object-fit: cover;\n  color: white;\n  &:before {\n    content: ' ';\n    display: block;\n    position: absolute;\n    height: 50px;\n    width: 50px;\n    background-image: url('./richen-portfolio-logo-512.png');\n  }\n`;\n\nconst SListRightContainer = styled.div`\n  width: 100%;\n  margin-right: 10px;\n  padding: 0;\n  background-color: transparent;\n  color: #424242;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst SListPrimaryText = styled.div`\n  color: white;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 5px;\n`;\n\nconst SPrimaryTextTitle = styled.strong`\n  max-width: 400px;\n  text-align: left;\n  margin-left: 10px;\n`;\n\nconst SListSecondaryText = styled(MDBTypography)`\n  display: flex;\n  flex-direction: column;\n  color: #c4b9b9;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  margin-left: 10px;\n  text-align: left;\n`;\n\nconst SLink = styled(MDBNavbarLink)`\n  color: lightblue;\n  text-decoration: none;\n  padding: 0;\n  margin: 0;\n  margin-left: 10px;\n  display: block;\n  text-align: left;\n`;\n\nconst SDivider = styled.div`\n  height: 3px;\n  width: 97%;\n  background-color: #313131;\n  margin: 10px;\n`;\n\nconst PocketFeed = () => {\n  const [articles, refetchArticles] = usePocketFeed();\n\n  const handleClick = (\n    evt: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    url: string\n  ) => {\n    evt.preventDefault();\n    window.location.href = url;\n  };\n\n  if (instanceOfArticles(articles))\n    return (\n      <SListBorder>\n        <SList horizontal>\n          {articles &&\n            articles.map(article => {\n              let logo: string | undefined;\n\n              if (!article.domain_metadata && !article.top_image_url) {\n                logo = '/richen-portfolio-logo-512.png';\n              } else if (!article.domain_metadata) {\n                logo = article.top_image_url;\n              } else if (article.domain_metadata) {\n                logo = article.domain_metadata.logo;\n              }\n              return (\n                <div key={article.item_id}>\n                  <SListItem\n                    tag=\"button\"\n                    onClick={evt => handleClick(evt, article.given_url)}\n                  >\n                    <SListIcon\n                      onError={e => {\n                        e.target.onerror = null;\n                        e.target.src = '/richen-portfolio-logo-512.png';\n                      }}\n                      alt={`${article.resolved_title}`}\n                      src={logo}\n                    />\n                    <SListRightContainer>\n                      <SListPrimaryText>\n                        <SPrimaryTextTitle>\n                          {article.given_title}\n                        </SPrimaryTextTitle>\n                        <div>{timeConverter(article.time_added)}</div>\n                      </SListPrimaryText>\n                      <>\n                        <SLink to={article.given_url}>\n                          {article.given_url}\n                        </SLink>\n                        <SListSecondaryText variant=\"body2\">\n                          {article.excerpt}\n                        </SListSecondaryText>\n                      </>\n                    </SListRightContainer>\n                  </SListItem>\n\n                  <SDivider />\n                </div>\n              );\n            })}\n        </SList>\n      </SListBorder>\n    );\n\n  return <div>Error with fetching articles</div>;\n};\n\nexport default PocketFeed;\n","/* eslint-disable import/prefer-default-export */\nexport const timeConverter = (UNIX_timestamp: number) => {\n  const a = new Date(UNIX_timestamp * 1000);\n  const months = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec',\n  ];\n  const year = a.getFullYear();\n  const month = months[a.getMonth()];\n  const date = a.getDate();\n  const hour = a.getHours();\n  const min = a.getMinutes();\n  const time = `${date} ${month} ${year} ${hour}:${min}`;\n  return time;\n};\n\nexport const hexToHSL = (hex: string) => {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  if (!result) throw new Error('Hex Result is null, bad request');\n\n  let r = parseInt(result[1], 16);\n  let g = parseInt(result[2], 16);\n  let b = parseInt(result[3], 16);\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  let h;\n  let s;\n  const l = (max + min) / 2;\n  if (max === min) {\n    // achromatic\n    h = 0;\n    s = 0;\n  } else {\n    const d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n      default:\n        // TODO untested case\n        h = (r - g) / d + 4;\n    }\n    h /= 6;\n  }\n  const HSL = {\n    h,\n    s,\n    l,\n  };\n  return HSL;\n};\n\nexport const generateColorRange = hsl => {\n  // TODO handle if + / - num is (> 0 / < 255)\n  /*\n    ? Max Lumosity 55, min 22, step can be 11 - 13 to be noticeable\n\n    Example:\n      input: \n  */\n  return {};\n};\n","import React from 'react';\nimport Layout from '../components/Layout';\nimport PocketFeed from '../components/PocketFeed';\nimport SEO from '../components/Seo';\n\ninterface Props {}\nconst pocket = (props: Props) => {\n  return (\n    <Layout>\n      <SEO title=\"Pocket\" />\n      <PocketFeed />\n    </Layout>\n  );\n};\n\nexport default pocket;\n"],"sourceRoot":""}